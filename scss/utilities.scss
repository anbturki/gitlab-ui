/**
* Utility class library
*
* ===========
* = WARNING =
* ===========
*
* Please take caution to make sure that the utility naming and values are consistent. We'd like to
* be able to automate this file in the future.
*
* Naming conventions
*
* - Prefix the utility names with the gl- namespace
* - Use t(op), b(ottom), left(l), and r(ight) to indicate
*   positioning variations, i.e. gl-border-b-1
*/

/**
* Padding utilities.
*
* naming convention: gl-p{position}-{spacing-scale-index}
* notes:
* - Utilities should strictly follow $gl-spacing-scale
*/
@mixin gl-p-0 { padding: map-get($gl-spacing-scale, 0); }
.gl-p-0 { @include gl-p-0; }

@mixin gl-p-4 { padding: map-get($gl-spacing-scale, 4); }
.gl-p-4 { @include gl-p-4; }


@mixin gl-px-3 {
  padding-left: map-get($gl-spacing-scale, 3);
  padding-right: map-get($gl-spacing-scale, 3);
}
.gl-px-3 { @include gl-px-3; }

@mixin gl-pr-2 { padding-right: map-get($gl-spacing-scale, 2); }
.gl-pr-2 { @include gl-pr-2; }

@mixin gl-pl-2 { padding-left: map-get($gl-spacing-scale, 2); }
.gl-pl-2 { @include gl-pl-2; }

@mixin gl-py-0 {
  padding-top: map-get($gl-spacing-scale, 0);
  padding-bottom: map-get($gl-spacing-scale, 0);
}
.gl-py-0 { @include gl-py-0; }

@mixin gl-py-2 {
  padding-top: map-get($gl-spacing-scale, 2);
  padding-bottom: map-get($gl-spacing-scale, 2);
}
.gl-py-2 { @include gl-py-2; }

@mixin gl-py-3 {
  padding-top: map-get($gl-spacing-scale, 3);
  padding-bottom: map-get($gl-spacing-scale, 3);
}
.gl-py-3 { @include gl-py-3; }

@mixin gl-py-4 {
  padding-top: map-get($gl-spacing-scale, 4);
  padding-bottom: map-get($gl-spacing-scale, 4);
}
.gl-py-4 { @include gl-py-4; }

/**
* Margin utilities.
*
* naming convention: gl-m{position}-{spacing-scale-index}
* notes:
* - Utilities should strictly follow $gl-spacing-scale
*/
@mixin gl-mr-2 { margin-right: map-get($gl-spacing-scale, 2); }
.gl-mr-2 { @include gl-mr-2; }


@mixin gl-my-auto {
  margin-top: auto;
  margin-bottom: auto;
}
.gl-my-auto { @include gl-my-auto; }


@mixin gl-mx-3 {
  margin-left: map-get($gl-spacing-scale, 3);
  margin-right: map-get($gl-spacing-scale, 3);
}
.gl-mx-3 { @include gl-mx-3; }

/**
* Fixed dimension (width/height) utilities
*
* naming convention: gl-{width|height}-{spacing-scale-index}
* notes:
* - Utilities should strictly follow $gl-spacing-scale
*/
@mixin gl-w-3 { width: map-get($gl-spacing-scale, 3); }
.gl-w-3 { @include gl-w-3; }

@mixin gl-w-4 { width: map-get($gl-spacing-scale, 4); }
.gl-w-4 { @include gl-w-4; }

@mixin gl-h-4 { width: map-get($gl-spacing-scale, 4); }
.gl-h-4 { @include gl-h-4; }


/**
* Border style utilities.
*
* naming convention: gl-border-{style}
*/
@mixin gl-border-solid { border-style: solid; }
.gl-border-solid { @include gl-border-solid; }


/**
* Border style utilities.
*
* naming convention: gl-border-{color-palette-variable}
* notes:
* - Prefer design system color palette. See variables.scss
* for a comprehensive list.
*/
@mixin gl-border-gray-200 { border-color: $gray-200; }
.gl-border-gray-200 { @include gl-border-gray-200; }

@mixin gl-border-gray-300 { border-color: $gray-300; }
.gl-border-gray-300 { @include gl-border-gray-300; }


/**
* Border width utilities.
*
* naming convention: gl-border-{position}-{border-width}
* notes:
* - Base new utilities in this group in the $gl-border-size variable
*/
@mixin gl-border-0 { border-width: map-get($gl-border-sizes, 0); }
.gl-border-0 { @include gl-border-0; }

@mixin gl-border-b-1 { border-bottom-width: map-get($gl-border-sizes, 1); }
.gl-border-b-1 { @include gl-border-b-1; }

/**
* Border radius utilities.
*
* naming convention: gl-rounded-{roundness-size}
* notes:
* - Base new utilities in this group in the $gl-border-radius variables
*/
@mixin gl-rounded-full { border-radius: $gl-border-radius-full; }
.gl-rounded-full { @include gl-rounded-full; }

/**
* Font size utility

* Notes:
* - Strictly based on design system type scale. See
* $gl-type-scale for further references.
*/
@mixin gl-font-sm { font-size: map-get($gl-type-scale, 'sm'); }
.gl-font-sm { @include gl-font-sm; }

/**
* Font-weight utilities.
*
* naming convention: gl-font-weight-[bold|normal]
*/
@mixin gl-font-weight-normal { font-weight: $gl-font-weight-normal; }
.gl-font-weight-normal { @include gl-font-weight-normal; }

@mixin gl-font-weight-bold { font-weight: $gl-font-weight-bold; }
.gl-font-weight-bold { @include gl-font-weight-bold; }

/**
* Text color utilities.
*
* naming convention: gl-text-{color-palette-variable-name}
* notes:
* - Strictly based design system color palette. See variables.scss
* for a comprehensive list.
*/
@mixin gl-text-gray-400 { color: $gray-400; }
.gl-text-gray-400 { @include gl-text-gray-400; }

@mixin gl-text-gray-700 { color: $gray-700; }
.gl-text-gray-700 { @include gl-text-gray-700; }

@mixin gl-text-gray-900 { color: $gray-900; }
.gl-text-gray-900 { @include gl-text-gray-900; }

@mixin gl-text-gray-950 { color: $gray-950; }
.gl-text-gray-950 { @include gl-text-gray-950; }

/**
* Line height utilities.
*
* naming convention: gl-line-height-{line-height-in-pixels}
* notes:
* - Strictly based in gl-line-height-{n} variables
*/
@mixin gl-line-height-normal { line-height: $gl-line-height; }
.gl-line-height-normal { @include gl-line-height-normal; }

/**
* Align-items utilities
*/
@mixin gl-align-items-center { text-align: center; }
.gl-align-items-center { @include gl-align-items-center; }

/**
* Inset border utilities
*
* Uses box-shadow: inset to create a border that does not
* increase the box size of an element
*
* Naming convention: gl-inset-border-{border-position}-{border-size}-{color-name}
*/
@mixin gl-inset-border-b-2-gray-200 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $gray-200;
}
.gl-inset-border-b-2-gray-200 { @include gl-inset-border-b-2-gray-200; }

@mixin gl-inset-border-b-2-theme-indigo-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-indigo-500;
}
.gl-inset-border-b-2-theme-indigo-500 { @include gl-inset-border-b-2-gray-200; }

@mixin gl-inset-border-b-2-theme-red-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-red-500;
}
.gl-inset-border-b-2-theme-red-500 { @include gl-inset-border-b-2-theme-red-500; }

@mixin gl-inset-border-b-2-theme-light-red-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-light-red-500;
}
.gl-inset-border-b-2-theme-light-red-500 { @include gl-inset-border-b-2-theme-light-red-500; }

@mixin gl-inset-border-b-2-theme-blue-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-blue-500;
}
.gl-inset-border-b-2-theme-blue-500 { @include gl-inset-border-b-2-theme-blue-500; }

@mixin gl-inset-border-b-2-theme-light-blue-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-light-blue-500;
}
.gl-inset-border-b-2-theme-light-blue-500 { @include gl-inset-border-b-2-theme-light-blue-500; }

@mixin gl-inset-border-b-2-theme-green-500 {
  box-shadow: inset 0 (map-get($gl-border-sizes, 2) * -1) 0 0 $theme-green-500;
}
.gl-inset-border-b-2-theme-green-500 { @include gl-inset-border-b-2-theme-green-500; }

/**
* Position utilities.
*
* naming convention: gl-{property-value}
*/
@mixin gl-absolute { position: absolute; }
.gl-absolute { @include gl-absolute; }

/**
* Coords utilities
*
* naming convention: gl-{position}-{value}
*/
@mixin gl-top-0 { top: 0; }
.gl-top-0 { @include gl-top-0; }

@mixin gl-right-0 { right: 0; }
.gl-right-0 { @include gl-right-0; }

/**
* Cursor utilities
*
* naming convention: gl-cursor-{property-value}
*/
@mixin gl-cursor-pointer { cursor: pointer; }
.gl-cursor-pointer { @include gl-cursor-pointer; }


/**
* Background color utilities.
*
* naming convention: gl-bg-{color-palette-variable-name}
* notes:
* - Strictly based design system color palette. See variables.scss
* for a comprehensive list.
*/
@mixin gl-bg-transparent { background-color: $transparent; }
.gl-bg-transparent { @include gl-bg-transparent; }

@mixin gl-bg-white-light { background-color: $white-light; }
.gl-bg-white-light { @include gl-bg-white-light; }
